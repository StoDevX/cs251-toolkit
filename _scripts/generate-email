#!/usr/bin/env fish

set USERS rives


function pipeset --no-scope-shadowing
	set -l _options
	set -l _variables
	for _item in $argv
		switch $_item
			case '-*'
				set _options $_options $_item
			case '*'
				set _variables $_variables  $_item
		end
	end
	for _variable in $_variables
		set $_variable ""
	end
	while read _line
		for _variable in $_variables
			set $_options $_variable $$_variable$_line\n
		end
	end
	return 0
end


for user in $USERS
	echo "$user"

	# Get the range of lines from '# $user' until the next line that starts with Accuracy
	# Substitute the current filename for $user (except that it just stick it in afterwards)
	# grep --invert to remove the lines
	# sed to remove the .mdown file extension
	# and then set it into the 'feedback' variable.
	awk "/# $user/,/^Accuracy/; sub(/$user/, FILENAME);" hw*.mdown | grep -v "# $user" | sed 's/.mdown//' | pipeset feedback

	# our list of homeworks are the top-level headings, minus the heading octothorpe
	# the 'xargs | cat' dance is to join the lines into a single line
	set hws (echo $feedback | grep '# ' | sed 's/# //' | xargs | cat)

	rm -f $user.eml
	begin
		echo "Subject: CS251 Homework Feedback ($hws)"
		echo "From: Hawken Rives <rives@stolaf.edu>"
		echo "To: $user@stolaf.edu"
		echo "Content-Type: multipart/mixed; boundary=0"
		echo
		echo "--0"
		echo "Content-Type: multipart/alternative; boundary=1"
		echo
		echo "--1"
		echo "Content-Type: text/plain; charset=UTF-8"
		echo $feedback | ~/cs251/_scripts/add_newline_before "#"
		echo
		echo "--1"
		echo "Content-Type: text/html; charset=UTF-8"
		echo
		# Now we use pandoc to convert any markdown into html for the email
		# add_newline_before is to add newlines before the hwNN headers, because awk doesn't.
		echo $feedback | ~/cs251/_scripts/add_newline_before "#" | pandoc -f markdown_github -t html
		echo
		echo "--1--"
		echo "--0"
	end >> $user.eml
end
